version: '3.8'

services:
  # Auth Database
  auth-postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: casino_user
      POSTGRES_PASSWORD: casino_password
    ports:
      - "5432:5432"
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    networks:
      - casino-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U casino_user -d auth_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Auth Service
  auth-service:
    build: ./auth-service
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://casino_user:casino_password@auth-postgres:5432/auth_db
      - SECRET_KEY=your-super-secret-key-here
    depends_on:
      auth-postgres:
        condition: service_healthy
    networks:
      - casino-network

  # Wallet Database
  wallet-postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: wallet_db
      POSTGRES_USER: casino_user
      POSTGRES_PASSWORD: casino_password
    ports:
      - "5433:5432"
    volumes:
      - wallet_postgres_data:/var/lib/postgresql/data
    networks:
      - casino-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U casino_user -d wallet_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Wallet Redis
  wallet-redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - casino-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Wallet Service
  wallet-service:
    build: ./wallet-service
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql://casino_user:casino_password@wallet-postgres:5432/wallet_db
      - REDIS_URL=redis://wallet-redis:6379/0
      - AUTH_SERVICE_URL=http://auth-service:8000
    depends_on:
      wallet-postgres:
        condition: service_healthy
      wallet-redis:
        condition: service_healthy
      auth-service:
        condition: service_started
    networks:
      - casino-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl/certs  # Для SSL сертификатов
    depends_on:
      - krakend
    networks:
      - casino-network

  # API Gateway промышленного уровня
  krakend:
    image: devopsfaith/krakend:2.6
    ports:
      - "8090:8080"
    volumes:
      - ./krakend.json:/etc/krakend/krakend.json
    environment:
      - SECRET_KEY=your-super-secret-key-here
    depends_on:
      - auth-service
      - wallet-service
      - game-service
    networks:
      - casino-network

  # Game Database  
  game-postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: game_db
      POSTGRES_USER: casino_user
      POSTGRES_PASSWORD: casino_password
    ports:
      - "5434:5432"
    volumes:
      - game_postgres_data:/var/lib/postgresql/data
    networks:
      - casino-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U casino_user -d game_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Game Service 
  game-service:
    build: ./game-service
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=postgresql://casino_user:casino_password@game-postgres:5432/game_db
    depends_on:
      game-postgres:
        condition: service_healthy
      auth-service:
        condition: service_started
    networks:
      - casino-network
    # Analytics Database
  analytics-postgres:
   image: postgres:13
   environment:
     POSTGRES_DB: analytics_db
     POSTGRES_USER: casino_user
     POSTGRES_PASSWORD: casino_password
   ports:
     - "5435:5432"
   volumes:
     - analytics_postgres_data:/var/lib/postgresql/data
   networks:
     - casino-network
   healthcheck:
     test: ["CMD-SHELL", "pg_isready -U casino_user -d analytics_db"]
     interval: 10s
     timeout: 5s
     retries: 5    
  analytics-service:
   build: ./analytics-service
   ports:
     - "8004:8004"
   environment:
     - DATABASE_URL=postgresql://casino_user:casino_password@analytics-postgres:5432/analytics_db
   depends_on:
     analytics-postgres:
       condition: service_healthy
   networks:
     - casino-network
  prometheus:
   image: prom/prometheus:latest
   ports:
     - "9090:9090"
   volumes:
     - ./prometheus.yml:/etc/prometheus/prometheus.yml
   command:
     - '--config.file=/etc/prometheus/prometheus.yml'
     - '--storage.tsdb.path=/prometheus'
     - '--web.console.libraries=/etc/prometheus/console_libraries'
     - '--web.console.templates=/etc/prometheus/console_templates'
     - '--storage.tsdb.retention.time=200h'
     - '--web.enable-lifecycle'
   networks:
     - casino-network
  grafana:
   image: grafana/grafana:latest
   ports:
     - "3000:3000"
   environment:
     - GF_SECURITY_ADMIN_PASSWORD=admin123
   volumes:
     - ./grafana/dashboards:/var/lib/grafana/dashboards
     - ./grafana/provisioning:/etc/grafana/provisioning
   depends_on:
     - prometheus
   networks:
     - casino-network





volumes:
  auth_postgres_data:
  wallet_postgres_data:
  game_postgres_data:
  analytics_postgres_data:
  redis_data:
  

networks:
  casino-network:
    driver: bridge